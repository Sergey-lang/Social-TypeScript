{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","u3-pages/Chat/ChatPage.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ws","WebSocket","Chat","Messages","AddMessage","useState","messages","setMessages","useEffect","addEventListener","e","newMessages","JSON","parse","data","prevMessages","style","height","overflowY","map","m","Message","message","key","src","photo","width","alt","userName","setMessage","onChange","currentTarget","onClick","send","ChatPage"],"mappings":"sKAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,8OIHhGC,EAAK,IAAIC,UAAU,gEAiBZC,EAAiB,WAE1B,OACI,6BACI,kBAACC,EAAD,MACA,kBAACC,EAAD,QAKCD,EAAqB,WAAO,IAAD,EAEJE,mBAA4B,IAFxB,mBAE7BC,EAF6B,KAEnBC,EAFmB,KAWpC,OAPAC,qBAAU,WACNR,EAAGS,iBAAiB,WAAW,SAACC,GAC5B,IAAMC,EAAcC,KAAKC,MAAMH,EAAEI,MACjCP,GAAY,SAACQ,GAAD,4BAAsBA,GAAtB,YAAuCJ,YAExD,IAGC,yBAAKK,MAAO,CAACC,OAAQ,QAASC,UAAW,SACpCZ,EAASa,KAAI,SAACC,EAAGzC,GAAJ,OAAU,kBAAC0C,EAAD,CAASC,QAASF,EAAGG,IAAK5C,SAKjD0C,EAAkD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAE7D,OACI,6BACI,yBAAKE,IAAKF,EAAQG,MAAOC,MAAO,GAAIC,IAAI,KAAI,2BAAIL,EAAQM,UACxD,6BACCN,EAAQA,QACT,+BAKClB,EAAuB,WAAO,IAAD,EACRC,mBAAS,IADD,mBAC/BiB,EAD+B,KACtBO,EADsB,KAYtC,OACI,6BACI,6BACI,8BAAUC,SAAU,SAACpB,GAAD,OAAOmB,EAAWnB,EAAEqB,cAAcpC,QAAQA,MAAO2B,KAEzE,6BACI,4BAAQU,QAfA,WACXV,IAGLtB,EAAGiC,KAAKX,GACRO,EAAW,OAUH,WAMDK,UAxEY,WACvB,OACI,6BACI,kBAAChC,EAAD","file":"static/js/9.fe77e914.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from 'react';\r\n\r\nconst ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n\r\nexport type ChatMessageType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <Chat/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Chat: React.FC = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Messages/>\r\n            <AddMessage/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Messages: React.FC = () => {\r\n\r\n    const [messages, setMessages] = useState<ChatMessageType[]>([])\r\n\r\n    useEffect(() => {\r\n        ws.addEventListener('message', (e) => {\r\n            const newMessages = JSON.parse(e.data);\r\n            setMessages((prevMessages) => [...prevMessages, ...newMessages])\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{height: '400px', overflowY: 'auto'}}>\r\n            {messages.map((m, i) => <Message message={m} key={i}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Message: React.FC<{ message: ChatMessageType }> = ({message}) => {\r\n\r\n    return (\r\n        <div>\r\n            <img src={message.photo} width={30} alt=\"\"/><b>{message.userName}</b>\r\n            <br/>\r\n            {message.message}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const AddMessage: React.FC = () => {\r\n    const [message, setMessage] = useState('')\r\n\r\n    const sendMessage = () => {\r\n        if (!message) {\r\n            return\r\n        }\r\n        ws.send(message)\r\n        setMessage('')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}></textarea>\r\n            </div>\r\n            <div>\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatPage"],"sourceRoot":""}