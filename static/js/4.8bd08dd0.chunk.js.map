{"version":3,"sources":["u2-components/Button/Button.tsx","u2-components/FormControl/FormControl.tsx","../node_modules/classnames/index.js","u2-components/FormControl/FormControl.module.scss","utils/validator.tsx","u2-components/Button/Button.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","u1-assets/images/post/love.svg","u3-pages/Profile/MyPosts/Post/Post.module.scss","u3-pages/Profile/MyPosts/AddNewPost/AddNewPost.module.scss","u3-pages/Profile/MyPosts/MyPosts.module.scss","u2-components/Info/Info.module.scss","u3-pages/Profile/MyProfileInfo/ProfileDescription/ProfileDescription.module.scss","u3-pages/Profile/Profile.module.scss","u3-pages/Profile/MyProfileInfo/ProfileDescriptionForm/ProfileDescriptionForm.module.scss","u3-pages/Profile/MyProfileInfo/Status/ProfileStatus.module.scss","u3-pages/Profile/MyPosts/Post/Post.tsx","u3-pages/Profile/MyPosts/AddNewPost/AddNewPost.tsx","u3-pages/Profile/MyPosts/MyPostsContainer.ts","u3-pages/Profile/MyPosts/MyPosts.tsx","u2-components/Info/Info.tsx","u3-pages/Profile/MyProfileInfo/ProfileDescription/ProfileDescription.tsx","u3-pages/Profile/MyProfileInfo/ProfileDescriptionForm/ProfileDescriptionForm.tsx","u3-pages/Profile/MyProfileInfo/Status/NewProfileStatus.tsx","u3-pages/Profile/Profile.tsx","u3-pages/Profile/ProfileContainer.tsx"],"names":["Button","className","children","onClick","white","restProps","classNames","s","button","FormControl","meta","touched","error","hasError","styles","formControl","childrenWrapperStyle","fieldErrorWrapper","Textarea","props","input","Input","CreateField","placeholder","name","component","validators","text","validate","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","required","value","maxLengthCreator","maxLength","_slicedToArray","arr","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","unsupportedIterableToArray","TypeError","Post","message","likeCount","central","info","imgWrapper","posterPhoto","href","postMeta","detail","moreInfo","like","src","likeImg","alt","maxLength200","AddNewPostForm","reduxForm","form","handleSubmit","newPostBox","onSubmit","postWrapper","posterImg","Field","postBtn","MyPostsContainer","connect","state","profilePage","profileState","addPost","postElements","posts","map","p","id","wall","sideBar","personal","formData","postNewMessageText","Info","description","finalClass","title","ProfileDescription","profile","editMode","isOwner","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","keys","contacts","index","btnWrapper","ProfileDescriptionForm","profileForm","textArea","checkbox","type","ProfileStatusWithHooks","useState","setEditMode","status","setStatus","useEffect","statusWrapper","statusInput","autoFocus","onBlur","updateOwnProfileStatus","onChange","e","currentTarget","editStatus","onDoubleClick","Profile","saveProfileData","savePhoto","Preloader","leftBlock","initialValues","then","ProfileContainer","Number","this","match","params","userid","userId","authorizedUserId","history","getUserProfileData","getStatusFromUser","updateProfile","prevProps","prevState","snapshot","React","Component","compose","authState","isAuth","withRouter"],"mappings":";mOAWaA,EAAoC,SAAC,GAAyD,IAAxDC,EAAuD,EAAvDA,UAAWC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,MAAUC,EAAe,0DAEvG,OACI,4CAAYA,EAAZ,CACQJ,UAAWK,IAAWC,IAAEC,OAAQP,EAAX,eACjBM,IAAEH,MAAQA,IAEdD,QAASA,IAAUD,K,+LCV5BO,EAA8C,SAAC,GAAwC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQV,EAAc,EAAdA,SAErEW,EAAWF,GAAWC,EAEtBE,EAAM,UAAMP,IAAEQ,YAAR,aAAwBF,EAAWN,IAAEK,MAAQ,IAEzD,OACI,yBAAKX,UAAWa,GACb,yBAAKb,UAAWM,IAAES,sBACdd,GAEJ,yBAAKD,UAAWM,IAAEU,mBAEZJ,GAAY,8BAAOD,MAOtBM,EAAwC,SAACC,GAAW,IACvDC,EAA6BD,EAA7BC,MAAgBf,GAAac,EAAtBT,KAD+C,YACzBS,EADyB,mBAE7D,OAAO,kBAACV,EAAgBU,EAAO,8CAAcC,EAAUf,MAG7CgB,EAAqC,SAACF,GAAW,IACpDC,EAA6BD,EAA7BC,MAAgBf,GAAac,EAAtBT,KAD4C,YACtBS,EADsB,mBAE1D,OAAO,kBAACV,EAAgBU,EACrB,2CAAWC,EAAUf,MAYdiB,EAAc,SAACC,EAA4BC,EAAcC,EAAkCC,GAA7E,IAAqGP,EAArG,uDAA6G,GAAIQ,EAAjH,uDAAwH,GAAxH,OACvB,oCACG,kBAAC,IAAD,eAAOJ,YAAaA,EACbC,KAAMA,EACNC,UAAWA,EACXG,SAAUF,GAENP,IACVQ,K,oBCxDR,OAOC,WACA,aAEA,IAAIE,EAAS,GAAGC,eAEhB,SAASxB,IAGR,IAFA,IAAIyB,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC5C,IAAIM,EAAQlC,EAAWmC,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,QAER,GAAgB,WAAZJ,EACV,IAAK,IAAIM,KAAOP,EACXN,EAAOc,KAAKR,EAAKO,IAAQP,EAAIO,IAChCX,EAAQM,KAAKK,IAMjB,OAAOX,EAAQa,KAAK,KAGgBC,EAAOC,SAC3CxC,EAAWyC,QAAUzC,EACrBuC,EAAOC,QAAUxC,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aAtCP,I,oBCNDuC,EAAOC,QAAU,CAAC,YAAc,iCAAiC,qBAAuB,0CAA0C,MAAQ,6B,iCCC1I,oEAAO,IAAME,EAA+B,SAACC,GACzC,IAAIA,EAEJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAA2C,SAACF,GACxE,GAAIA,GAASA,EAAMf,OAASiB,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCR3CN,EAAOC,QAAU,CAAC,OAAS,yB,+ECGZ,SAASM,EAAeC,EAAKrB,GAC1C,OCLa,SAAyBqB,GACtC,GAAIf,MAAMC,QAAQc,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKrB,GACjD,GAAsB,qBAAXsB,QAA4BA,OAAOC,YAAYC,OAAOH,GAAjE,CACA,IAAII,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKV,EAAIC,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKpB,KAAKyB,EAAGb,QAETjB,GAAKyB,EAAKvB,SAAWF,GAH8C0B,GAAK,IAK9E,MAAOQ,GACPP,GAAK,EACLC,EAAKM,EACL,QACA,IACOR,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBJ,EAAKrB,IAAM,OAAAmC,EAAA,GAA2Bd,EAAKrB,IGLjF,WACb,MAAM,IAAIoC,UAAU,6IHIgF,K,oBILtGvB,EAAOC,QAAU,IAA0B,kC,oBCC3CD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,KAAO,mBAAmB,WAAa,yBAAyB,YAAc,0BAA0B,KAAO,mBAAmB,SAAW,uBAAuB,OAAS,qBAAqB,SAAW,uBAAuB,KAAO,qB,oBCA7RD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,YAAc,gCAAgC,UAAY,8BAA8B,MAAQ,0BAA0B,QAAU,8B,oBCAlMD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,QAAU,yBAAyB,QAAU,yBAAyB,SAAW,0BAA0B,MAAQ,yB,oBCAlKD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,YAAc,4B,oBCAtFD,EAAOC,QAAU,CAAC,QAAU,oCAAoC,QAAU,oCAAoC,SAAW,qCAAqC,WAAa,yC,oBCA3KD,EAAOC,QAAU,CAAC,YAAc,6BAA6B,UAAY,2BAA2B,WAAa,4BAA4B,QAAU,yBAAyB,QAAU,yBAAyB,SAAW,4B,oBCA9ND,EAAOC,QAAU,CAAC,QAAU,wCAAwC,QAAU,wCAAwC,SAAW,yCAAyC,YAAc,4CAA4C,MAAQ,sCAAsC,SAAW,yCAAyC,WAAa,2CAA2C,MAAQ,wC,oBCAtYD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,OAAS,8BAA8B,WAAa,kCAAkC,YAAc,mCAAmC,WAAa,oC,iJCU9MuB,EAA8B,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,UACnD,OACI,yBAAKtE,UAAWM,IAAEiE,SACf,yBAAKvE,UAAWM,IAAEkE,MACf,yBAAKxE,UAAWM,IAAEmE,YACf,yBAAKzE,UAAWM,IAAEoE,eAErB,yBAAK1E,UAAWM,IAAEiB,MACf,6BACG,uBAAGoD,KAAK,KAAR,gBAEH,8BACG,4BADH,2CAMN,yBAAK3E,UAAWM,IAAEsE,UACf,yBAAK5E,UAAWM,IAAEuE,QACf,2BACIR,KAIV,yBAAKrE,UAAWM,IAAEwE,UACf,4BACG,4BACG,yBAAK9E,UAAWM,IAAEyE,MACf,yBAAKC,IAAKC,IAASC,IAAI,SACvB,8BAAOZ,EAAP,W,+DChChBa,EAAelC,YAAiB,KA6BzBmC,EAAiBC,YAAgD,CAACC,KAAM,sBAAvDD,EA3B1B,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAyB,EAAX5E,MAEb,OACI,0BAAMX,UAAWM,IAAEkF,WAAYC,SAAUF,GACtC,yBAAKvF,UAAWM,IAAEoF,aACf,yBAAK1F,UAAWM,IAAEqF,YAClB,yBAAK3F,UAAWM,IAAEa,OACf,kBAACyE,EAAA,EAAD,CAAOtE,YAAY,oCACZE,UAAWP,IACXM,KAAK,qBACLI,SAAU,CAACoB,IAAUoC,OAIlC,6BACG,kBAACpF,EAAA,EAAD,CAAQC,UAAWM,IAAEuF,SAArB,a,kCCXJC,EAAmBC,aAFf,SAACC,GAAD,MAAwC,CAACC,YAAaD,EAAME,gBAGlE,CAACC,aADoBJ,ECFe,SAAC,GAA4B,IAA3BE,EAA0B,EAA1BA,YAAaE,EAAa,EAAbA,QAEvDC,EAAeH,EAAYI,MAC1BC,KAAI,SAACC,GAAD,OAAiB,kBAAC,EAAD,CAAMlC,QAASkC,EAAElC,QAASC,UAAWiC,EAAEjC,UAAW7B,IAAK8D,EAAEC,QAMnF,OACI,yBAAKxG,UAAWM,IAAEmG,MACf,2BAAOzG,UAAWM,IAAEoG,SACjB,yBAAK1G,UAAWM,IAAEiE,SACf,0BAAMvE,UAAWM,IAAEqG,UAAnB,UAGA,kBAACvB,EAAD,CAAgBK,SAXL,SAACmB,GACtBT,EAAQS,EAASC,yBAab,yBAAK7G,UAAWM,IAAE+F,OACdD,O,0BCrBDU,EAA4B,SAAC,GAA8C,IAA7CvF,EAA4C,EAA5CA,KAAMwF,EAAsC,EAAtCA,YAAa9G,EAAyB,EAAzBA,SAAUD,EAAe,EAAfA,UAE/DgH,EAAU,UAAM1G,IAAEkE,KAAR,YAAgBxE,GAEhC,OAAO,yBAAKA,UAAWgH,GACP,0BAAMhH,UAAWM,IAAE2G,OACf1F,GAEjB,0BAAMvB,UAAWM,IAAEyG,aACf9G,IAAsB8G,GAA4B,kC,kBCP/CG,EACT,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QAElB,OACI,2BAAOrH,UAAWM,IAAEoG,SACjB,yBAAK1G,UAAWM,IAAEiE,SAChB,0BAAMvE,UAAWM,IAAEqG,UAAnB,iBAGC,kBAAC,EAAD,CAAMpF,KAAK,OAAOwF,YAAaI,GAAWA,EAAQG,WAClD,kBAAC,EAAD,CAAM/F,KAAK,WAAWwF,YAAaI,GAAWA,EAAQI,UACtD,kBAAC,EAAD,CAAMhG,KAAK,oBAAoBwF,YAAaI,GAAWA,EAAQK,eAAiB,MAAQ,OACxF,kBAAC,EAAD,CAAMjG,KAAK,SAASwF,YAAaI,GAAWA,EAAQM,4BAEjDlE,OAAOmE,KAAKP,EAAQQ,UAAUrB,KAAI,SAAC7D,EAAKmF,GACrC,OAAO,kBAAC,EAAD,CAAMnF,IAAKmF,EACLrG,KAAMkB,EAENsE,YAAaI,EAAQQ,SAASlF,QAGhD4E,GACD,yBAAKrH,UAAWM,IAAEuH,YACf,kBAAC9H,EAAA,EAAD,CAAQG,QAAS,WACdkH,GAAS,KADZ,Y,oCC4BPU,EAAyBzC,YAA2D,CAACC,KAAM,gBAAlED,EAhDhC,SAAC,GAIO,IAHJE,EAGG,EAHHA,aACA4B,EAEG,EAFHA,QACAxG,EACG,EADHA,MAGP,OACI,2BAAOX,UAAWM,IAAEoG,SACjB,yBAAK1G,UAAWM,IAAEiE,SACZ,0BAAMvE,UAAWM,IAAEqG,UAAnB,iBAGH,0BAAM3G,UAAWM,IAAEyH,YAAatC,SAAUF,GACvC,kBAAC,EAAD,CAAMhE,KAAK,OAAOvB,UAAWM,IAAEa,OAC3BE,YAAY,eAAgB,WAAYD,IAAO,KAEnD,kBAAC,EAAD,CAAMG,KAAK,WAAWvB,UAAWM,IAAE0H,UAC/B3G,YAAY,WAAY,UAAWJ,IAAU,KAEjD,kBAAC,EAAD,CAAMM,KAAK,oBAAoBvB,UAAWM,IAAE2H,UACxC5G,YAAY,4BAA6B,iBAAkBD,IAAO,GAAI,CAAC8G,KAAM,cAEjF,kBAAC,EAAD,CAAM3G,KAAK,SAASvB,UAAWM,IAAEa,OAC7BE,YAAY,YAAa,4BAA6BD,IAAO,KAG9DmC,OAAOmE,KAAKP,EAAQQ,UAAUrB,KAAI,SAAC7D,EAAKmF,GACrC,OAAO,kBAAC,EAAD,CAAMrG,KAAMkB,EACNzC,UAAWM,IAAEa,MACbsB,IAAKmF,GACdvG,YAAYoB,EAAK,YAAcA,EAAKrB,IAAO,QAIpDT,GAAS,yBAAKX,UAAWM,IAAEK,OAAQA,GACpC,yBAAKX,UAAWM,IAAEuH,YACf,kBAAC9H,EAAA,EAAD,oB,kBCzCNoI,EAAyB,SAACjH,GAAwC,IAAD,EAE7CkH,oBAAkB,GAF2B,mBAEtEhB,EAFsE,KAE5DiB,EAF4D,OAGjDD,mBAAiBlH,EAAMoH,QAH0B,mBAGtEA,EAHsE,KAG9DC,EAH8D,KAK3EC,qBAAU,WACPD,EAAUrH,EAAMoH,UAChB,CAACpH,EAAMoH,SAeV,OACI,yBAAKtI,UAAWM,IAAEmI,eAEZrB,EACM,yBAAKpH,UAAWM,IAAEgI,QACjB,2BAAOtI,UAAWM,IAAEoI,YACbR,KAAK,OAAOS,WAAW,EACvBC,OAhBG,WACxBP,GAAY,GACZnH,EAAM2H,uBAAuBP,IAeRQ,SAZD,SAACC,GACrBR,EAAUQ,EAAEC,cAAchG,QAYLA,MAAOsF,KAEf,yBAAKtI,UAAWM,IAAE2I,YACjB,0BAAMjJ,UAAWM,IAAEgI,OAAQY,cAzBnB,WACtBb,GAAY,KAwB+DnH,EAAMoH,QAAU,SAE1EpH,EAAMmG,SACN,yBAAKrH,UAAWM,IAAEuH,YACf,kBAAC9H,EAAA,EAAD,CAAQG,QAAS,kBAAMmI,GAAY,KAAnC,YC9Bbc,EAAkC,SAAC,GACwC,IAAnFhC,EAAkF,EAAlFA,QAASmB,EAAyE,EAAzEA,OAAQjB,EAAiE,EAAjEA,QAASwB,EAAwD,EAAxDA,uBAAmCO,GAAqB,EAAhCC,UAAgC,EAArBD,iBAAqB,EAEpDhB,oBAAkB,GAFkC,mBAE7EhB,EAF6E,KAEnEiB,EAFmE,KAIpF,IAAKlB,EACF,OAAO,kBAACmC,EAAA,EAAD,MAUV,OACI,yBAAKtJ,UAAWM,IAAE2F,aACf,yBAAKjG,UAAWM,IAAEiJ,WACf,2BAAOvJ,UAAWM,IAAEoG,SACjB,yBAAK1G,UAAWM,IAAEiE,SAClB,0BAAMvE,UAAWM,IAAEqG,UAAnB,UAGG,kBAAC,EAAD,CAAwB2B,OAAQA,EAAQO,uBAAwBA,EAAwBxB,QAASA,MAGrGD,EAIO,kBAACU,EAAD,CAAwBX,QAASA,EACTqC,cAAerC,EACf1B,SAxB1B,SAACmB,GACfwC,EAAgBxC,GAAU6C,MACtB,kBAAMpB,GAAY,SAiBN,kBAAC,EAAD,CAAoBlB,QAASA,EACTC,SAAUiB,EACVhB,QAASA,KAMzC,kBAACvB,EAAD,Q,OCrCJ4D,E,8KAGA,IAAIlD,EAAKmD,OAAOC,KAAK1I,MAAM2I,MAAMC,OAAOC,QACpCC,EAASxD,GAAUoD,KAAK1I,MAAM+I,iBAC7BD,GACFJ,KAAK1I,MAAMgJ,QAAQ9H,KAAK,UAG3BwH,KAAK1I,MAAMiJ,mBAAmBH,GAC9BJ,KAAK1I,MAAMkJ,kBAAkBJ,K,0CAI7BJ,KAAKS,kB,yCAGWC,EAAgCC,EAAyBC,GACrEZ,KAAK1I,MAAM2I,MAAMC,OAAOC,SAAWO,EAAUT,MAAMC,OAAOC,QAC3DH,KAAKS,kB,+BAKR,OAAO,kBAAC,EAAD,iBAAaT,KAAK1I,MAAlB,CACSiG,QAASyC,KAAK1I,MAAMiG,QACpBmB,OAAQsB,KAAK1I,MAAMoH,OACnBe,UAAWO,KAAK1I,MAAMmI,UACtBhC,SAAUuC,KAAK1I,MAAM2I,MAAMC,OAAOC,OAClClB,uBAAwBe,KAAK1I,MAAM2H,uBACnCO,gBAAiBQ,KAAK1I,MAAMkI,uB,GA9BnBqB,IAAMC,WAuDtBC,sBACX5E,aARa,SAACC,GAAD,MAAwC,CACtDmB,QAASnB,EAAME,aAAaiB,QAC5BmB,OAAQtC,EAAME,aAAaoC,OAC3B2B,iBAAkBjE,EAAM4E,UAAUpE,GAClCqE,OAAQ7E,EAAM4E,UAAUC,UAKnB,CAACV,uBAAoBC,sBAAmBvB,2BAAwBQ,cAAWD,sBAC/E0B,IAHWH,CAIbjB","file":"static/js/4.8bd08dd0.chunk.js","sourcesContent":["import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport s from './Button.module.scss'\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {\r\n   white?: boolean\r\n}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({className, children, onClick, white, ...restProps}) => {\r\n\r\n   return (\r\n       <button {...restProps}\r\n               className={classNames(s.button, className, {\r\n                  [s.white]: white,\r\n               })}\r\n               onClick={onClick}>{children}\r\n       </button>\r\n   )\r\n}\r\n","import React, {FC} from 'react'\r\nimport s from './FormControl.module.scss'\r\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps} from 'redux-form'\r\n\r\ntype FormControlPropsType = {\r\n   meta: WrappedFieldMetaProps\r\n}\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\r\n\r\n   const hasError = touched && error\r\n\r\n   const styles = `${s.formControl}  ${hasError ? s.error : ''}`\r\n\r\n   return (\r\n       <div className={styles}>\r\n          <div className={s.childrenWrapperStyle}>\r\n             {children}\r\n          </div>\r\n          <div className={s.fieldErrorWrapper}>\r\n             {\r\n                hasError && <span>{error}</span>\r\n             }\r\n          </div>\r\n       </div>\r\n   )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n   return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n   return <FormControl {...props}>\r\n      <input {...input}{...restProps}/>\r\n   </FormControl>\r\n}\r\n\r\nexport const Checkbox: React.FC<WrappedFieldProps> = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n   return <FormControl {...props}>\r\n      <input {...input}{...restProps}/>\r\n   </FormControl>\r\n}\r\n\r\n//create wrapper\r\nexport const CreateField = (placeholder: string | null, name: string, component: FC<WrappedFieldProps>, validators: Array<any>, props = {}, text = '') => (\r\n    <>\r\n       <Field placeholder={placeholder}\r\n              name={name}\r\n              component={component}\r\n              validate={validators}\r\n\r\n              {...props}/>\r\n       {text}\r\n    </>\r\n)\r\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__31cRM\",\"childrenWrapperStyle\":\"FormControl_childrenWrapperStyle__e9-0i\",\"error\":\"FormControl_error__2QYvd\"};","export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field id required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength: number): FieldValidatorType => (value) => {\r\n    if (value && value.length <= minLength) return `Min length is ${minLength} symbols`;\r\n\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2sFmR\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/love.833e5dd6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"central\":\"Post_central__1smcG\",\"info\":\"Post_info__16w3B\",\"imgWrapper\":\"Post_imgWrapper__35dDT\",\"posterPhoto\":\"Post_posterPhoto__1xHrq\",\"name\":\"Post_name__GKQEN\",\"postMeta\":\"Post_postMeta__24y26\",\"detail\":\"Post_detail__2OEDN\",\"moreInfo\":\"Post_moreInfo__3wgUe\",\"like\":\"Post_like__3iIZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPostBox\":\"AddNewPost_newPostBox__3k1ec\",\"postWrapper\":\"AddNewPost_postWrapper__1VZhT\",\"posterImg\":\"AddNewPost_posterImg__1ZXSA\",\"input\":\"AddNewPost_input__2yRy5\",\"postBtn\":\"AddNewPost_postBtn__3bHGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wall\":\"MyPosts_wall__2PvGR\",\"sideBar\":\"MyPosts_sideBar__RRofk\",\"central\":\"MyPosts_central__BCvyj\",\"personal\":\"MyPosts_personal__3XCh7\",\"posts\":\"MyPosts_posts__2QkNh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Info_info__Mq5xu\",\"title\":\"Info_title__1eygp\",\"description\":\"Info_description__NCDrV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"ProfileDescription_sideBar__OQ8C_\",\"central\":\"ProfileDescription_central__4FE_d\",\"personal\":\"ProfileDescription_personal__16baM\",\"btnWrapper\":\"ProfileDescription_btnWrapper__2C0UC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"Profile_profilePage__24z39\",\"leftBlock\":\"Profile_leftBlock__2ppxD\",\"btnWrapper\":\"Profile_btnWrapper__3y_mc\",\"sideBar\":\"Profile_sideBar__3mpQM\",\"central\":\"Profile_central__3ucEm\",\"personal\":\"Profile_personal__35eD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"ProfileDescriptionForm_sideBar__1hEgB\",\"central\":\"ProfileDescriptionForm_central__1Sexd\",\"personal\":\"ProfileDescriptionForm_personal__dfanC\",\"profileForm\":\"ProfileDescriptionForm_profileForm__13Vy2\",\"input\":\"ProfileDescriptionForm_input__H9mMc\",\"textArea\":\"ProfileDescriptionForm_textArea__2OWEW\",\"btnWrapper\":\"ProfileDescriptionForm_btnWrapper__2FIVP\",\"error\":\"ProfileDescriptionForm_error__3Y5QO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusWrapper\":\"ProfileStatus_statusWrapper__3gGpX\",\"status\":\"ProfileStatus_status__2NKfA\",\"btnWrapper\":\"ProfileStatus_btnWrapper__2ikzg\",\"statusInput\":\"ProfileStatus_statusInput__1w2mP\",\"editStatus\":\"ProfileStatus_editStatus__C56qJ\"};","import React from 'react'\r\n\r\nimport likeImg from '../../../../u1-assets/images/post/love.svg'\r\n\r\nimport s from './Post.module.scss'\r\n\r\ntype MessageType = {\r\n   message: string\r\n   likeCount: number\r\n}\r\n\r\nexport const Post: React.FC<MessageType> = ({message, likeCount}) => {\r\n   return (\r\n       <div className={s.central}>\r\n          <div className={s.info}>\r\n             <div className={s.imgWrapper}>\r\n                <div className={s.posterPhoto}/>\r\n             </div>\r\n             <div className={s.name}>\r\n                <ins>\r\n                   <a href=\"#\">Jack Carter</a>\r\n                </ins>\r\n                <span>\r\n                   <i></i>\r\n                   published: December, 31 2020 23.59:PM\r\n                </span>\r\n             </div>\r\n          </div>\r\n          <div className={s.postMeta}>\r\n             <div className={s.detail}>\r\n                <p>\r\n                   {message}\r\n                </p>\r\n             </div>\r\n          </div>\r\n          <div className={s.moreInfo}>\r\n             <ul>\r\n                <li>\r\n                   <div className={s.like}>\r\n                      <img src={likeImg} alt=\"like\"/>\r\n                      <span>{likeCount}K</span>\r\n                   </div>\r\n                </li>\r\n             </ul>\r\n          </div>\r\n       </div>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form'\r\nimport {Button} from '../../../../u2-components/Button/Button'\r\nimport {Textarea} from '../../../../u2-components/FormControl/FormControl'\r\nimport {maxLengthCreator, required} from '../../../../utils/validator'\r\n\r\nimport s from './AddNewPost.module.scss'\r\n\r\nconst maxLength200 = maxLengthCreator(200)\r\nexport const AddPost: React.FC<InjectedFormProps<PostFormValuesType, PostFormOwnProps> & PostFormOwnProps> =\r\n    ({handleSubmit, error}) => {\r\n\r\n       return (\r\n           <form className={s.newPostBox} onSubmit={handleSubmit}>\r\n              <div className={s.postWrapper}>\r\n                 <div className={s.posterImg}/>\r\n                 <div className={s.input}>\r\n                    <Field placeholder=\"Share some what you are thinking?\"\r\n                           component={Textarea}\r\n                           name='postNewMessageText'\r\n                           validate={[required, maxLength200]}\r\n                    />\r\n                 </div>\r\n              </div>\r\n              <div>\r\n                 <Button className={s.postBtn}>Post</Button>\r\n              </div>\r\n           </form>\r\n       )\r\n    }\r\n\r\nexport type PostFormValuesType = {\r\n   postNewMessageText: string\r\n}\r\n\r\nexport type PostFormOwnProps = {}\r\n\r\nexport const AddNewPostForm = reduxForm<PostFormValuesType, PostFormOwnProps>({form: 'postAddMessageForm'})(AddPost)","import {MyPosts} from './MyPosts'\r\nimport {connect} from 'react-redux'\r\nimport {AppStateType} from '../../../u4-redux/store'\r\nimport {addPost, ProfileInitialStateType} from '../../../u4-redux/profile-reducer'\r\n\r\nexport type MapStateType = {\r\n   profilePage: ProfileInitialStateType\r\n}\r\nexport type MapDispatchType = {\r\n   addPost: (postNewMessage: string) => void\r\n}\r\n\r\nconst mapState = (state: AppStateType): MapStateType => ({profilePage: state.profileState})\r\n\r\nexport const MyPostsContainer = connect<MapStateType, MapDispatchType, {}, AppStateType>\r\n(mapState, {addPost})(MyPosts)\r\n","import React from 'react'\r\nimport {Post} from './Post/Post'\r\nimport {PostType} from '../../../u4-redux/profile-reducer'\r\nimport {MapDispatchType, MapStateType} from './MyPostsContainer'\r\nimport {AddNewPostForm, PostFormValuesType} from './AddNewPost/AddNewPost'\r\n\r\nimport s from './MyPosts.module.scss'\r\n\r\ntype OwnProps = {}\r\n\r\ntype OwnPropsType = MapStateType & MapDispatchType & OwnProps\r\n\r\nexport const MyPosts: React.FC<OwnPropsType> = ({profilePage, addPost}) => {\r\n\r\n   let postElements = profilePage.posts\r\n       .map((p: PostType) => <Post message={p.message} likeCount={p.likeCount} key={p.id}/>)\r\n\r\n   const addPostCallback = (formData: PostFormValuesType) => {\r\n      addPost(formData.postNewMessageText)\r\n   }\r\n\r\n   return (\r\n       <div className={s.wall}>\r\n          <aside className={s.sideBar}>\r\n             <div className={s.central}>\r\n                <span className={s.personal}>\r\n                   Status\r\n                </span>\r\n                <AddNewPostForm onSubmit={addPostCallback}/>\r\n             </div>\r\n          </aside>\r\n          <div className={s.posts}>\r\n             {postElements}\r\n          </div>\r\n       </div>\r\n   )\r\n}\r\n","import React from 'react'\r\n\r\nimport s from './Info.module.scss'\r\n\r\ntype InfoProps = {\r\n   description?: string | null | boolean\r\n   name: string\r\n   children?: any\r\n   className?: string\r\n}\r\n\r\nexport const Info: React.FC<InfoProps> = ({name, description, children, className}) => {\r\n\r\n   const finalClass = `${s.info} ${className}`\r\n\r\n   return <div className={finalClass}>\r\n                   <span className={s.title}>\r\n                      {name}\r\n                   </span>\r\n      <span className={s.description}>\r\n         {children ? children : description ? description : 'Information is not provided'}\r\n      </span>\r\n   </div>\r\n}","import React from 'react'\r\nimport {Info} from '../../../../u2-components/Info/Info'\r\nimport {Button} from '../../../../u2-components/Button/Button'\r\nimport {ContactType, ProfileType} from '../../../../u4-redux/profile-reducer'\r\n\r\nimport s from './ProfileDescription.module.scss'\r\n\r\nexport type ProfileProps = {\r\n   profile: ProfileType\r\n   editMode: (value: boolean) => void\r\n   isOwner: boolean\r\n}\r\n\r\nexport const ProfileDescription: React.FC<ProfileProps> =\r\n    ({profile, editMode, isOwner}) => {\r\n\r\n       return (\r\n           <aside className={s.sideBar}>\r\n              <div className={s.central}>\r\n                <span className={s.personal}>\r\n                   Personal info\r\n                </span>\r\n                 <Info name='Name' description={profile && profile.fullName}/>\r\n                 <Info name='About me' description={profile && profile.aboutMe}/>\r\n                 <Info name='Looking for a job' description={profile && profile.lookingForAJob ? 'Yes' : 'No'}/>\r\n                 <Info name='Skills' description={profile && profile.lookingForAJobDescription}/>\r\n                 {\r\n                    Object.keys(profile.contacts).map((key, index) => {\r\n                       return <Info key={index}\r\n                                    name={key}\r\n                           //We can cast the key argument to be of keyof Person to ensure TypeScript understands                             what we’re aiming for. [key as keyof ContactType]\r\n                                    description={profile.contacts[key as keyof ContactType]}/>\r\n                    })\r\n                 }\r\n                 {isOwner &&\r\n                 <div className={s.btnWrapper}>\r\n                    <Button onClick={() => {\r\n                       editMode(true)\r\n                    }}>Edit</Button>\r\n                 </div>\r\n                 }\r\n              </div>\r\n           </aside>\r\n       )\r\n    }\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {InjectedFormProps, reduxForm} from 'redux-form'\r\nimport {Info} from '../../../../u2-components/Info/Info'\r\nimport {Button} from '../../../../u2-components/Button/Button'\r\nimport {ContactType, PhotosType, ProfileType} from '../../../../u4-redux/profile-reducer'\r\nimport {CreateField, Input, Textarea} from '../../../../u2-components/FormControl/FormControl'\r\n\r\nimport s from './ProfileDescriptionForm.module.scss'\r\n\r\ntype ProfileDescriptionFormOwnProps = {\r\n   profile: ProfileType\r\n   initialValues: any\r\n}\r\n\r\nexport const ProfileForm: React.FC<InjectedFormProps<ProfileFormType,\r\n    ProfileDescriptionFormOwnProps> & ProfileDescriptionFormOwnProps>\r\n    = ({\r\n          handleSubmit,\r\n          profile,\r\n          error,\r\n       }) => {\r\n\r\n   return (\r\n       <aside className={s.sideBar}>\r\n          <div className={s.central}>\r\n                <span className={s.personal}>\r\n                   Personal info\r\n                </span>\r\n             <form className={s.profileForm} onSubmit={handleSubmit}>\r\n                <Info name='Name' className={s.input}>\r\n                   {CreateField('Your name...', 'fullName', Input, [])}\r\n                </Info>\r\n                <Info name='About me' className={s.textArea}>\r\n                   {CreateField('About me', 'aboutMe', Textarea, [])}\r\n                </Info>\r\n                <Info name='Looking for a job' className={s.checkbox}>\r\n                   {CreateField('What are you looking for?', 'lookingForAJob', Input, [], {type: 'checkbox'})}\r\n                </Info>\r\n                <Info name='Skills' className={s.input}>\r\n                   {CreateField('Skills...', 'lookingForAJobDescription', Input, [])}\r\n                </Info>\r\n                {\r\n                   Object.keys(profile.contacts).map((key, index) => {\r\n                      return <Info name={key}\r\n                                   className={s.input}\r\n                                   key={index}>\r\n                         {CreateField(key, 'contacts.' + key, Input, [])}\r\n                      </Info>\r\n                   })\r\n                }\r\n                {error && <div className={s.error}>{error}</div>}\r\n                <div className={s.btnWrapper}>\r\n                   <Button>Save</Button>\r\n                </div>\r\n             </form>\r\n          </div>\r\n       </aside>\r\n   )\r\n}\r\n\r\n// We can cast the key argument to be of keyof Person to ensure TypeScript understands what we’re aiming for.\r\n// [key as keyofContactType]\r\n// contactValue={profile.contacts[key as keyof ContactType]}/>\r\n\r\nexport const ProfileDescriptionForm = reduxForm<ProfileFormType, ProfileDescriptionFormOwnProps>({form: 'profile-data'})(ProfileForm)\r\n\r\n//dada from form = form name = ProfileType obj.\r\nexport type ProfileFormType = {\r\n   userId: number\r\n   lookingForAJob: boolean\r\n   lookingForAJobDescription: string\r\n   fullName: string\r\n   contacts: ContactType\r\n   aboutMe: string\r\n   photos: PhotosType\r\n}\r\n\r\ntype OwnProps = {}\r\n","import React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport {Button} from '../../../../u2-components/Button/Button'\r\n\r\nimport s from './ProfileStatus.module.scss'\r\n\r\ntype ProfileStatusWithHooksProps = {\r\n   status: string\r\n   updateOwnProfileStatus: (status: string) => void\r\n   isOwner: boolean\r\n}\r\n\r\nexport const ProfileStatusWithHooks = (props: ProfileStatusWithHooksProps) => {\r\n\r\n   let [editMode, setEditMode] = useState<boolean>(false)\r\n   let [status, setStatus] = useState<string>(props.status)\r\n\r\n   useEffect(() => {\r\n      setStatus(props.status)\r\n   }, [props.status])\r\n\r\n   const activateEditMode = () => {\r\n      setEditMode(true)\r\n   }\r\n\r\n   const deactivateEditMode = () => {\r\n      setEditMode(false)\r\n      props.updateOwnProfileStatus(status)\r\n   }\r\n\r\n   const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n      setStatus(e.currentTarget.value)\r\n   }\r\n\r\n   return (\r\n       <div className={s.statusWrapper}>\r\n          {\r\n             editMode\r\n                 ? <div className={s.status}>\r\n                    <input className={s.statusInput}\r\n                           type=\"text\" autoFocus={true}\r\n                           onBlur={deactivateEditMode}\r\n                           onChange={onStatusChange}\r\n                           value={status}/>\r\n                 </div>\r\n                 : <div className={s.editStatus}>\r\n                    <span className={s.status} onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n                    {\r\n                       props.isOwner &&\r\n                       <div className={s.btnWrapper}>\r\n                          <Button onClick={() => setEditMode(true)}>Edit</Button>\r\n                       </div>\r\n                    }\r\n                 </div>\r\n          }\r\n       </div>\r\n   )\r\n}","import React, {useState} from 'react'\r\nimport {ProfileType} from '../../u4-redux/profile-reducer'\r\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer'\r\nimport {Preloader} from '../../u2-components/Preloader/Preloader'\r\nimport {ProfileDescription} from './MyProfileInfo/ProfileDescription/ProfileDescription'\r\n\r\nimport s from './Profile.module.scss'\r\nimport {ProfileDescriptionForm, ProfileFormType} from './MyProfileInfo/ProfileDescriptionForm/ProfileDescriptionForm'\r\nimport {ProfileStatusWithHooks} from './MyProfileInfo/Status/NewProfileStatus'\r\n\r\ntype ProfileProps = {\r\n   profile: ProfileType | null\r\n   status: string\r\n   isOwner: boolean\r\n   updateOwnProfileStatus: (status: string) => void\r\n   savePhoto: (photo: File) => void\r\n   saveProfileData: (profile: ProfileType) => any//check his value\r\n}\r\n\r\nexport const Profile: React.FC<ProfileProps> = (\r\n    {profile, status, isOwner, updateOwnProfileStatus, savePhoto, saveProfileData}) => {\r\n\r\n   const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n   if (!profile) {\r\n      return <Preloader/>\r\n   }\r\n\r\n   const onSubmit = (formData: ProfileFormType) => {\r\n      saveProfileData(formData).then(\r\n          () => setEditMode(false)\r\n      )\r\n      // console.log(formData)\r\n   }\r\n\r\n   return (\r\n       <div className={s.profilePage}>\r\n          <div className={s.leftBlock}>\r\n             <aside className={s.sideBar}>\r\n                <div className={s.central}>\r\n                <span className={s.personal}>\r\n                   Status\r\n                </span>\r\n                   <ProfileStatusWithHooks status={status} updateOwnProfileStatus={updateOwnProfileStatus} isOwner={isOwner}/>\r\n                </div>\r\n             </aside>\r\n             {!editMode\r\n                    ? <ProfileDescription profile={profile}\r\n                                          editMode={setEditMode}\r\n                                          isOwner={isOwner}/>\r\n                    : <ProfileDescriptionForm profile={profile}\r\n                                              initialValues={profile}\r\n                                              onSubmit={onSubmit}/>\r\n             }\r\n          </div>\r\n          <MyPostsContainer/>\r\n       </div>\r\n   )\r\n}","import {compose} from 'redux'\r\nimport {Profile} from './Profile'\r\nimport {connect} from 'react-redux'\r\nimport {\r\n   getStatusFromUser, getUserProfileData, ProfileType,\r\n   savePhoto, saveProfileData, updateOwnProfileStatus\r\n} from '../../u4-redux/profile-reducer'\r\nimport React, {ComponentType} from 'react'\r\nimport {AppStateType} from '../../u4-redux/store'\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom'\r\n\r\n\r\ntype PathParamsType = {\r\n   userid: string\r\n}\r\ntype OwnPropsType = MapStateType & MapDispatchType\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n   updateProfile() {\r\n      let id = Number(this.props.match.params.userid)\r\n      let userId = id ? id : this.props.authorizedUserId\r\n      if (!userId) {\r\n         this.props.history.push('/login')\r\n      }\r\n\r\n      this.props.getUserProfileData(userId!)\r\n      this.props.getStatusFromUser(userId!)\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.updateProfile()\r\n   }\r\n\r\n   componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n      if (this.props.match.params.userid !== prevProps.match.params.userid) {\r\n         this.updateProfile()\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return <Profile {...this.props}\r\n                      profile={this.props.profile}\r\n                      status={this.props.status}\r\n                      savePhoto={this.props.savePhoto}\r\n                      isOwner={!this.props.match.params.userid}\r\n                      updateOwnProfileStatus={this.props.updateOwnProfileStatus}\r\n                      saveProfileData={this.props.saveProfileData}\r\n      />\r\n   }\r\n}\r\n\r\ntype MapDispatchType = {\r\n   getUserProfileData: (userId: number) => void\r\n   getStatusFromUser: (userId: number) => void\r\n   updateOwnProfileStatus: (status: string) => void\r\n   savePhoto: (photo: File) => void\r\n   saveProfileData: (profile: ProfileType) => void\r\n}\r\ntype MapStateType = {\r\n   profile: ProfileType | null\r\n   status: string\r\n   authorizedUserId: number | null\r\n   isAuth: boolean\r\n}\r\nconst mapState = (state: AppStateType): MapStateType => ({\r\n   profile: state.profileState.profile,\r\n   status: state.profileState.status,\r\n   authorizedUserId: state.authState.id,\r\n   isAuth: state.authState.isAuth\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStateType, MapDispatchType, {}, AppStateType>(mapState,\r\n        {getUserProfileData, getStatusFromUser, updateOwnProfileStatus, savePhoto, saveProfileData}),\r\n    withRouter,\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}