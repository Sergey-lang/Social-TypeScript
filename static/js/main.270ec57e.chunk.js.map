{"version":3,"sources":["u3-pages/Header/Header.module.css","u3-pages/Navbar/Navbar.module.css","u4-redux/app-reducer.ts","u4-redux/store.ts","serviceWorker.ts","u3-pages/Header/Header.tsx","u3-pages/Header/HeaderContainer.tsx","u3-pages/Navbar/Navbar.tsx","u7-hoc/withSuspense.tsx","u6-app/App.tsx","index.tsx","u5-api/auth-api.ts","u5-api/security-api.ts","u4-redux/auth-reducer.ts","u2-components/Preloader/Preloader.tsx","u2-components/Button/Button.tsx","u5-api/profile-api.ts","u4-redux/profile-reducer.ts","u5-api/api.ts","u4-redux/dialogs-reducer.ts","u5-api/user-api.ts","u4-redux/users-reducer.ts","u2-components/Button/Button.module.css","u1-assets/images/preloader.gif","u2-components/Preloader/Preloader.module.css"],"names":["module","exports","initializeState","initialized","initializedSuccess","type","rootReducer","combineReducers","profileState","profileReducer","dialogsState","dialogsReducer","usersState","usersReducer","authState","authReducer","app","state","action","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Boolean","location","hostname","match","Header","props","className","s","header","container","logo_name","logo_explanation","user_login","isAuth","loginBtnWrapper","login","Button","onClick","logout","logBtn","to","HeaderContainer","this","React","Component","connect","getAuthUserData","Navbar","navbar_wrapper","link_wrapper","activeClassName","activeLink","withSuspense","WrappedComponent","restProps","Suspense","fallback","Preloader","Login","lazy","ProfileContainer","DialogsContainer","UsersContainer","App","initializeApp","path","render","withRouter","dispatch","promise","Promise","all","then","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","authAPI","axiosInstance","get","res","data","email","password","rememberMe","captcha","post","delete","securityAPI","id","captchaUrl","setUserData","getCaptchaUrlSuccess","a","resultCode","getCaptchaUrl","messages","length","stopSubmit","_error","url","preloader","src","alt","finalClassName","default","profileAPI","userId","status","put","photoFile","formData","FormData","append","headers","profile","initialState","posts","likeCount","postNewMessageText","userStatus","photos","addPost","setOwnProfileStatus","getUserProfileData","getStatusFromUser","updateOwnProfileStatus","savePhoto","file","saveProfileData","getState","reject","axios","create","withCredentials","baseURL","dialogs","name","dialogNewMessageText","addMessage","usersAPI","currentPage","pageSize","users","totalUsersCount","isFetching","followingInProgress","map","u","userID","followed","totalCount","payload","filter","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","requestPage","items","follow","unfollow"],"mappings":"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","file":"static/js/main.270ec57e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ULd6\",\"container\":\"Header_container__1fU0Y\",\"logo_name\":\"Header_logo_name__3oZQd\",\"loginBtnWrapper\":\"Header_loginBtnWrapper__2xlyG\",\"logo_explanation\":\"Header_logo_explanation__favcl\",\"user_login\":\"Header_user_login__1wtqQ\",\"login\":\"Header_login__2IijD\",\"logBtn\":\"Header_logBtn__3xu8C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar_wrapper\":\"Navbar_navbar_wrapper__1mLoC\",\"link_wrapper\":\"Navbar_link_wrapper__344rr\",\"activeLink\":\"Navbar_activeLink__THTVa\"};","import {ThunkAction, ThunkDispatch} from 'redux-thunk'\r\nimport {AppStateType} from './store'\r\nimport {getAuthUserData} from './auth-reducer'\r\n\r\nexport type AppInitPageType = {\r\n   initialized: boolean\r\n}\r\n\r\nlet initializeState: AppInitPageType = {\r\n   initialized: false\r\n}\r\n\r\nexport const appReducer = (state: AppInitPageType = initializeState, action: ActionsType): AppInitPageType => {\r\n   switch (action.type) {\r\n      case 'APP/INITIALIZED_SUCCESS':\r\n         return {...state, initialized: true}\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\n//Action\r\nexport const initializedSuccess = () => ({\r\n   type: 'APP/INITIALIZED_SUCCESS',\r\n} as const)\r\n\r\n//Thunk\r\nexport const initializeApp = (): ThunkType =>\r\n    (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\r\n       let promise = dispatch(getAuthUserData())\r\n       Promise.all([promise])\r\n           .then(() => {\r\n              dispatch(initializedSuccess)\r\n           })\r\n    }\r\n\r\n//Type\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\ntype ActionsType = ReturnType<typeof initializedSuccess>\r\n\r\n\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\r\nimport {profileReducer} from './profile-reducer'\r\nimport {dialogsReducer} from './dialogs-reducer'\r\nimport {usersReducer} from './users-reducer'\r\nimport {authReducer} from './auth-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {appReducer} from './app-reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n   profileState: profileReducer,\r\n   dialogsState: dialogsReducer,\r\n   usersState: usersReducer,\r\n   authState: authReducer,\r\n   app: appReducer,\r\n   form: formReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport let store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the u6-app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve u1-assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web u6-app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different u6-app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {Button} from '../../u2-components/Button/Button'\r\n\r\ntype HeaderPropsType = {\r\n   isAuth: boolean\r\n   login: string | null\r\n   logout: () => void\r\n}\r\n\r\nexport const Header: React.FC<HeaderPropsType> = (props) => {\r\n   return (\r\n       <header className={s.header}>\r\n          <div className={s.container}>\r\n             <div className={s.logo_name}>\r\n                SW<span className={s.logo_explanation}>social network</span>\r\n             </div>\r\n             <div className={s.user_login}>\r\n                {props.isAuth\r\n                    ? <div className={s.loginBtnWrapper}>\r\n                       <div className={s.login}>{props.login}</div>\r\n                       <Button onClick={props.logout} className={s.logBtn}>logout</Button>\r\n                    </div>\r\n                    : <NavLink to={'/login'} className={s.login}>Login</NavLink>}\r\n             </div>\r\n          </div>\r\n       </header>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport {Header} from './Header'\r\nimport {AppStateType} from '../../u4-redux/store'\r\nimport {connect} from 'react-redux'\r\nimport {getAuthUserData, logout} from '../../u4-redux/auth-reducer'\r\n\r\ntype OwnPropsType = MapStateType & MapDispatchType\r\n\r\nclass HeaderContainer extends React.Component<OwnPropsType> {\r\n   render() {\r\n      return <Header login={this.props.login}\r\n                     isAuth={this.props.isAuth}\r\n                     logout={this.props.logout}\r\n      />\r\n   }\r\n}\r\n\r\ntype MapStateType = {\r\n   isAuth: boolean\r\n   login: string | null\r\n}\r\n\r\ntype MapDispatchType = {\r\n   getAuthUserData: () => void\r\n   logout: () => void\r\n}\r\n\r\nconst mapState = (state: AppStateType): MapStateType => ({\r\n   isAuth: state.authState.isAuth,\r\n   login: state.authState.login,\r\n})\r\n\r\nexport default connect<MapStateType, MapDispatchType, {}, AppStateType>(\r\n    mapState,\r\n    {getAuthUserData, logout}\r\n)(HeaderContainer)\r\n","import React from 'react'\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport const Navbar: React.FC = () => {\r\n   return (\r\n       <div className={s.navbar_wrapper}>\r\n          <div className={s.link_wrapper}>\r\n             <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n          </div>\r\n          <div className={s.link_wrapper}>\r\n             <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n          </div>\r\n          <div className={s.link_wrapper}>\r\n             <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n          </div>\r\n          <div className={s.link_wrapper}>\r\n             <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n          </div>\r\n       </div>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport {Preloader} from '../u2-components/Preloader/Preloader'\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n   return (props: any) => {\r\n      let {...restProps} = props\r\n      return (\r\n          <React.Suspense fallback={<Preloader/>}>\r\n             <WrappedComponent {...restProps as WCP}/>\r\n          </React.Suspense>\r\n      )\r\n   }\r\n}\r\n","import React, {ComponentType} from 'react'\r\nimport './App.css'\r\nimport HeaderContainer from '../u3-pages/Header/HeaderContainer'\r\nimport {Navbar} from '../u3-pages/Navbar/Navbar'\r\nimport {Route, withRouter} from 'react-router-dom'\r\nimport {AppStateType} from '../u4-redux/store'\r\nimport {connect} from 'react-redux'\r\nimport {initializeApp} from '../u4-redux/app-reducer'\r\nimport {compose} from 'redux'\r\nimport {Preloader} from '../u2-components/Preloader/Preloader'\r\nimport {withSuspense} from '../u7-hoc/withSuspense'\r\n\r\ntype PropsType = MapStateType & MapDispatch\r\n\r\nconst Login = React.lazy(() => import('../u3-pages/Login/Login'))\r\nconst ProfileContainer = React.lazy(() => import('../u3-pages/Profile/ProfileContainer'))\r\nconst DialogsContainer = React.lazy(() => import('../u3-pages/Dialogs/DialogsContainer'))\r\nconst UsersContainer = React.lazy(() => import('../u3-pages/Users/UsersContainer'))\r\n\r\nclass App extends React.Component<PropsType> {\r\n\r\n   componentDidMount() {\r\n      this.props.initializeApp()\r\n   }\r\n\r\n   render() {\r\n\r\n      if (this.props.initialized) {\r\n         return <Preloader/>\r\n      }\r\n\r\n      return (\r\n          <div className=\"app\">\r\n             <HeaderContainer/>\r\n             <div className=\"appContainer\">\r\n                <Navbar/>\r\n                <Route path=\"/profile/:userid?\" render={withSuspense(ProfileContainer)}/>\r\n                <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)}/>\r\n                <Route path=\"/users\" render={withSuspense(UsersContainer)}/>\r\n                <Route path=\"/login\" render={withSuspense(Login)}/>\r\n             </div>\r\n          </div>\r\n      )\r\n   }\r\n}\r\n\r\ntype MapDispatch = {\r\n   initializeApp: () => void\r\n}\r\n\r\ntype MapStateType = {\r\n   initialized: boolean\r\n}\r\n\r\nconst mapState = (state: AppStateType): MapStateType => ({\r\n   initialized: state.app.initialized\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n    withRouter,\r\n    connect<MapStateType, MapDispatch, {}, AppStateType>(mapState, {initializeApp}),\r\n)(App)\r\n","import {store} from './u4-redux/store';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './u6-app/App';\r\nimport React from 'react';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App/>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your u6-app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","import {axiosInstance} from './api'\r\n\r\nexport const authAPI = {\r\n   me() {\r\n      return axiosInstance.get(`auth/me`)\r\n          .then(res => res.data)\r\n   },\r\n   login(email: string, password: string, rememberMe: boolean = false, captcha: string | null = null) {\r\n      return axiosInstance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n          .then(res => res.data)\r\n   },\r\n   logout() {\r\n      return axiosInstance.delete(`auth/login`,)\r\n          .then(res => res.data)\r\n   },\r\n}","import {axiosInstance} from './api';\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return axiosInstance.get(`security/get-captcha-url`)\r\n            .then(res => res.data)\r\n    },\r\n}","import {ThunkAction, ThunkDispatch} from 'redux-thunk'\r\nimport {AppStateType} from './store'\r\nimport {authAPI} from '../u5-api/auth-api'\r\nimport {FormAction, stopSubmit} from 'redux-form'\r\nimport {securityAPI} from '../u5-api/security-api'\r\n\r\nexport type AuthInitPageType = {\r\n   id: number | null\r\n   email: string | null\r\n   login: string | null\r\n   isAuth: boolean\r\n   captchaUrl: string | null\r\n}\r\n\r\nlet initializeState: AuthInitPageType = {\r\n   id: null,\r\n   email: null,\r\n   login: null,\r\n   isAuth: false,\r\n   captchaUrl: null\r\n}\r\n\r\nexport const authReducer = (state: AuthInitPageType = initializeState, action: ActionsType): AuthInitPageType => {\r\n   switch (action.type) {\r\n      case 'AUTH/SET-USER-DATA':\r\n      case 'AUTH/GET-CAPTCHA-URL':\r\n         return {...state, ...action.data}\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\n//Action\r\nexport const setUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n   type: 'AUTH/SET-USER-DATA',\r\n   data: {id, email, login, isAuth},\r\n} as const)\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string) => ({\r\n   type: 'AUTH/GET-CAPTCHA-URL',\r\n   data: {captchaUrl},\r\n} as const)\r\n\r\n//Thunk\r\nexport const getAuthUserData = (): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\r\n       const data = await authAPI.me()\r\n       if (data.resultCode === 0) {\r\n          let {id, email, login} = data.data\r\n          dispatch(setUserData(id, email, login, true))\r\n       }\r\n    }\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string | null = null): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType | FormAction>) => {\r\n       const data = await authAPI.login(email, password, rememberMe, captcha)\r\n       if (data.resultCode === 0) {\r\n          dispatch(getAuthUserData())\r\n       } else {\r\n          //captcha\r\n          if (data.resultCode === 10) {\r\n             dispatch(getCaptchaUrl())\r\n          }\r\n          //incorrect form value\r\n          let messages = data.messages.length > 0 ? data.messages[0] : 'some error'\r\n          dispatch(stopSubmit('login', {_error: messages}))\r\n       }\r\n    }\r\n\r\nexport const getCaptchaUrl = (): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\r\n       const data = await securityAPI.getCaptchaUrl()\r\n       const captchaUrl: string = data.url\r\n       dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n    }\r\n\r\nexport const logout = (): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\r\n       const response = await authAPI.logout()\r\n       if (response.resultCode === 0) {\r\n          dispatch(setUserData(null, null, null, false))\r\n       }\r\n    }\r\n\r\n//Type\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\ntype ActionsType = ReturnType<typeof setUserData> | ReturnType<typeof getCaptchaUrlSuccess>\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport preloader from '../../u1-assets/images/preloader.gif'\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader: React.FC = () => {\r\n   return (\r\n       <div className={s.preloader}>\r\n          <img src={preloader} alt=\"preloader\"/>\r\n       </div>\r\n   )\r\n}\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './Button.module.css'\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({className, ...restProps}) => {\r\n   const finalClassName = `${className} ${s.default}`\r\n   return (\r\n       <>\r\n          <button className={finalClassName} {...restProps}/>\r\n       </>\r\n   )\r\n}\r\n\r\n","import {axiosInstance} from './api'\r\nimport {ProfileType} from '../u4-redux/profile-reducer'\r\n\r\nexport const profileAPI = {\r\n   getProfile(userId: number) {\r\n      return axiosInstance.get(`profile/${userId}`)\r\n          .then(res => res.data)\r\n   },\r\n\r\n   getUserStatus(userId: number) {\r\n      return axiosInstance.get(`profile/status/${userId}`)\r\n          .then(res => res)\r\n   },\r\n\r\n   updateOwnProfileStatus(status: string) {\r\n      return axiosInstance.put<UpdateStatusType>(`profile/status`, {status})\r\n          .then(res => res.data)\r\n   },\r\n   savePhoto(photoFile: File) {\r\n      const formData = new FormData()\r\n      formData.append('image', photoFile)\r\n      return axiosInstance.put<UpdateStatusType>(`profile/photo`, formData, {\r\n         headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n         }\r\n      }).then(res => res.data)\r\n   },\r\n   saveProfile(profile: ProfileType) {\r\n      return axiosInstance.put<UpdateStatusType>(`profile/`, profile)\r\n          .then(res => res.data)\r\n   },\r\n}\r\n\r\ntype UpdateStatusType = {\r\n   resultCode: number\r\n   messages: string\r\n   data: any\r\n}","import {ThunkAction, ThunkDispatch} from 'redux-thunk'\r\nimport {AppStateType} from './store'\r\nimport {profileAPI} from '../u5-api/profile-api'\r\nimport {FormAction, stopSubmit} from 'redux-form'\r\n\r\nlet initialState = {\r\n   posts: [\r\n      {id: 1, message: 'Hello I am props.', likeCount: 21},\r\n      {id: 2, message: 'I am very handsome props', likeCount: 10},\r\n      {id: 3, message: 'I go out from my post u3-pages', likeCount: 5},\r\n   ] as Array<PostType>,\r\n   profile: null as ProfileType | null,\r\n   status: ''\r\n}\r\n\r\nexport type ProfileInitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: ProfileInitialStateType = initialState,\r\n                               action: ActionsType): ProfileInitialStateType => {\r\n   switch (action.type) {\r\n      case 'PROFILE/ADD-POST':\r\n         return {\r\n            ...state,\r\n            posts: [{id: 4, message: action.postNewMessageText, likeCount: 0}, ...state.posts],\r\n         }\r\n      case 'PROFILE/SET-USER-PROFILE':\r\n         return {...state, profile: action.profile}\r\n      case 'PROFILE/GET-USER-STATUS':\r\n         return {...state, status: action.userStatus}\r\n      case 'PROFILE/UPDATE-PROFILE-STATUS':\r\n         return {...state, status: action.status}\r\n      case 'PROFILE/SAVE-PHOTO-SUCCESS':\r\n         return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\n//Action\r\nexport const addPost = (postNewMessageText: string) =>\r\n    ({type: 'PROFILE/ADD-POST', postNewMessageText} as const)\r\n\r\nexport const setUserProfileData = (profile: ProfileType) =>\r\n    ({type: 'PROFILE/SET-USER-PROFILE', profile} as const)\r\n\r\nexport const getUserStatus = (userStatus: string) =>\r\n    ({type: 'PROFILE/GET-USER-STATUS', userStatus} as const)\r\n\r\nexport const setOwnProfileStatus = (status: string) =>\r\n    ({type: 'PROFILE/UPDATE-PROFILE-STATUS', status} as const)\r\n\r\nexport const savePhotoSuccess = (photos: PhotosType) => ({type: 'PROFILE/SAVE-PHOTO-SUCCESS', photos} as const)\r\n\r\n//Thunk\r\nexport const getUserProfileData = (userId: number): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\r\n       const data = await profileAPI.getProfile(userId)\r\n       dispatch(setUserProfileData(data))\r\n    }\r\n\r\nexport const getStatusFromUser = (userId: number): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\r\n       const res = await profileAPI.getUserStatus(userId)\r\n       dispatch(getUserStatus(res.data))\r\n    }\r\n\r\nexport const updateOwnProfileStatus = (status: string): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\r\n       const data = await profileAPI.updateOwnProfileStatus(status)\r\n       if (data.resultCode === 0) {\r\n          dispatch(setOwnProfileStatus(status))\r\n       }\r\n    }\r\n\r\nexport const savePhoto = (file: File): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\r\n       const data = await profileAPI.savePhoto(file)\r\n       if (data.resultCode === 0) {\r\n          dispatch(savePhotoSuccess(data.data.photos))\r\n       }\r\n    }\r\n\r\nexport const saveProfileData = (profile: ProfileType): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType | FormAction>, getState) => {\r\n       const userId = getState().authState.id\r\n       const data = await profileAPI.saveProfile(profile)\r\n       if (data.resultCode === 0) {\r\n          dispatch(getUserProfileData(userId as number))\r\n       } else {\r\n          //need changing error for different fields\r\n          // dispatch(stopSubmit('edit-profile', {'contacts': {'facebook': messages}}))\r\n          const messages = data.messages.length > 0 ? data.messages[0] : 'some error'\r\n          dispatch(stopSubmit('profile-data', {_error: messages}))\r\n          return Promise.reject(messages)\r\n       }\r\n    }\r\n\r\n//Type\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\n\r\ntype ActionsType =\r\n    ReturnType<typeof addPost> |\r\n    ReturnType<typeof setUserProfileData> |\r\n    ReturnType<typeof getUserStatus> |\r\n    ReturnType<typeof setOwnProfileStatus> |\r\n    ReturnType<typeof savePhotoSuccess>\r\n\r\nexport type PostType = {\r\n   id: number\r\n   message: string\r\n   likeCount: number\r\n}\r\nexport type ContactType = {\r\n   github: string\r\n   vk: string\r\n   facebook: string\r\n   instagram: string\r\n   twitter: string\r\n   website: string\r\n   youtube: string\r\n   mainLink: string\r\n}\r\n\r\nexport type PhotosType = {\r\n   small: string | null\r\n   large: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n   userId: number\r\n   lookingForAJob: boolean\r\n   lookingForAJobDescription: string\r\n   fullName: string\r\n   contacts: ContactType\r\n   aboutMe: string\r\n   photos: PhotosType\r\n}\r\n\r\n\r\n","import axios from 'axios'\r\n\r\nexport const axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'ec9092bf-d7c1-484e-b4e6-892ed49a92ea'\r\n    },\r\n})\r\n","let initializeState: DialogInitPageType = {\r\n   dialogs: [\r\n      {id: 1, name: 'Stanislav Ivanov'},\r\n      {id: 2, name: 'Egor Ivanov'},\r\n      {id: 3, name: 'Sergey Ivanov'},\r\n   ],\r\n   messages: [\r\n      {id: 1, message: 'Detract yet delight written farther'},\r\n      {id: 2, message: 'An stairs as be lovers'},\r\n      {id: 3, message: 'Unpleasant in in insensible favourable'},\r\n   ],\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogInitPageType = initializeState,\r\n                               action: ActionsType): DialogInitPageType => {\r\n   switch (action.type) {\r\n      case 'DIALOGS/ADD-NEW-MESSAGE':\r\n         return {\r\n            ...state,\r\n            messages: [...state.messages, {id: 5, message: action.dialogNewMessageText}]\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\n//Action\r\nexport const addMessage = (dialogNewMessageText: string) =>\r\n    ({type: 'DIALOGS/ADD-NEW-MESSAGE', dialogNewMessageText} as const)\r\n\r\n//Types\r\ntype ActionsType = ReturnType<typeof addMessage>\r\nexport type DialogType = {\r\n   id: number\r\n   name: string\r\n}\r\nexport type MessageType = {\r\n   id: number\r\n   message: string\r\n}\r\nexport type DialogInitPageType = {\r\n   dialogs: Array<DialogType>\r\n   messages: Array<MessageType>\r\n}\r\n\r\n","import {axiosInstance} from './api';\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return axiosInstance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => res.data)\r\n    },\r\n\r\n    unfollow(userId: number) {\r\n        return axiosInstance.delete(`follow/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n\r\n    follow(userId: number) {\r\n        return axiosInstance.post(`follow/${userId}`, {})\r\n            .then(res => res.data)\r\n    },\r\n}","import {AppStateType} from './store'\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk'\r\nimport {usersAPI} from '../u5-api/user-api'\r\n\r\nlet initializeState: UsersInitializeStateType = {\r\n   users: [],\r\n   totalUsersCount: 0,\r\n   pageSize: 5,\r\n   currentPage: 5,\r\n   isFetching: false,\r\n   followingInProgress: []\r\n}\r\n\r\nexport const usersReducer = (state: UsersInitializeStateType = initializeState, action: ActionsType): UsersInitializeStateType => {\r\n   switch (action.type) {\r\n      case 'USERS/FOLLOW':\r\n         return {\r\n            ...state,\r\n            users: state.users.map(u => {\r\n               if (u.id === action.userID) {\r\n                  return {...u, followed: true}\r\n               }\r\n               return u\r\n            })\r\n         }\r\n      case 'USERS/UNFOLLOW':\r\n         return {\r\n            ...state,\r\n            users: state.users.map(u => {\r\n               if (u.id === action.userID) {\r\n                  return {...u, followed: false}\r\n               }\r\n               return u\r\n            })\r\n         }\r\n      case 'USERS/SET-USERS':\r\n         return {...state, users: [...action.users]}\r\n      case 'USERS/SET-CURRENT-PAGE':\r\n         return {...state, currentPage: action.currentPage}\r\n      case 'USERS/SET-USERS-TOTAL-COUNT':\r\n         return {...state, totalUsersCount: action.totalCount}\r\n      case 'USERS/TOGGLE-IS-FETCHING':\r\n         return {...state, isFetching: action.isFetching}\r\n      case 'USERS/FOLLOWING-IN-PROGRESS':\r\n         return {\r\n            ...state,\r\n            followingInProgress: action.payload.isFetching\r\n                ? [...state.followingInProgress, action.payload.userId]\r\n                : state.followingInProgress.filter(id => id !== action.payload.userId)\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\n//Action\r\nexport const followSuccess = (userID: number) => ({type: 'USERS/FOLLOW', userID} as const)\r\nexport const unfollowSuccess = (userID: number) => ({type: 'USERS/UNFOLLOW', userID} as const)\r\nexport const setUsers = (users: Array<UsersType>) => ({type: 'USERS/SET-USERS', users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({\r\n   type: 'USERS/SET-CURRENT-PAGE',\r\n   currentPage\r\n} as const)\r\nexport const setUsersTotalCount = (totalCount: number) => ({\r\n   type: 'USERS/SET-USERS-TOTAL-COUNT',\r\n   totalCount\r\n} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({\r\n   type: 'USERS/TOGGLE-IS-FETCHING', isFetching\r\n} as const)\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n   type: 'USERS/FOLLOWING-IN-PROGRESS',\r\n   payload: {\r\n      isFetching,\r\n      userId\r\n   }\r\n} as const)\r\n\r\n//Thunk\r\nexport const requestUsers = (requestPage: number, pageSize: number): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\r\n       dispatch(toggleIsFetching(true))\r\n       dispatch(setCurrentPage(requestPage))\r\n       const data = await usersAPI.getUsers(requestPage, pageSize)\r\n       dispatch(toggleIsFetching(false))\r\n       dispatch(setUsers(data.items))\r\n       dispatch(setUsersTotalCount(data.totalCount))\r\n    }\r\n\r\nexport const follow = (id: number): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\r\n       dispatch(toggleFollowingProgress(true, id))\r\n       const data = await usersAPI.follow(id)\r\n       if (data.resultCode === 0) {\r\n          dispatch(followSuccess(id))\r\n       }\r\n       dispatch(toggleFollowingProgress(false, id))\r\n    }\r\n\r\nexport const unfollow = (id: number): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\r\n       dispatch(toggleFollowingProgress(true, id))\r\n       const data = await usersAPI.unfollow(id)\r\n       if (data.resultCode === 0) {\r\n          dispatch(unfollowSuccess(id))\r\n       }\r\n       dispatch(toggleFollowingProgress(false, id))\r\n    }\r\n\r\n//Type\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\ntype ActionsType =\r\n    ReturnType<typeof followSuccess> |\r\n    ReturnType<typeof unfollowSuccess> |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setUsersTotalCount> |\r\n    ReturnType<typeof toggleIsFetching> |\r\n    ReturnType<typeof toggleFollowingProgress>\r\n\r\nexport type PhotosType = {\r\n   small: string | null\r\n   large: string | null\r\n}\r\nexport type UsersType = {\r\n   id: number\r\n   name: string\r\n   status: string\r\n   photos: PhotosType\r\n   followed: boolean\r\n}\r\nexport type UsersInitializeStateType = {\r\n   users: Array<UsersType>\r\n   totalUsersCount: number\r\n   pageSize: number\r\n   currentPage: number\r\n   isFetching: boolean\r\n   followingInProgress: Array<number>\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__3EVVZ\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.5861c44d.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1YIaU\"};"],"sourceRoot":""}