{"version":3,"sources":["u2-components/Button/Button.tsx","u2-components/Button/Button.module.scss","u2-components/Paginator/Paginator.module.css","u3-pages/Users/User/User.module.css","u1-assets/images/icons8_user.png","u3-pages/Users/Users.module.css","u2-components/Paginator/Paginator.tsx","u3-pages/Users/User/User.tsx","u3-pages/Users/UsersSearchForm.tsx","u3-pages/Users/Users.tsx","u4-redux/users-selectors.ts","u3-pages/Users/UsersContainer.tsx"],"names":["Button","className","children","onClick","white","restProps","classNames","s","button","module","exports","Paginator","currentPage","onPageChanged","pageSize","totalItemsCount","portionSize","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","users_page_num","filter","p","map","key","classnames","selected","pageNumber","User","user","follow","unfollow","followingInProgress","avatar","to","id","link_to_profile","alt","src","photos","large","description","user_name","name","status","followed","btn","disabled","some","usersSearchValidateForm","values","UsersSearchForm","React","memo","props","initialValues","term","friend","validate","onSubmit","setSubmitting","onFilterChanged","isSubmitting","type","as","value","Users","totalUsersCount","users","isFetching","users_container","users_headline","users_page","u","getUsers","state","usersState","getTotalUsersCount","getPageSize","getCurrentPage","getIsFetching","getFollowingInProgress","getUsersFilter","UsersContainer","requestUsers","this","Preloader","Component","compose","connect"],"mappings":"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","file":"static/js/7.ad6b6307.chunk.js","sourcesContent":["import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport s from './Button.module.scss'\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {\r\n   white?: boolean\r\n}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({className, children, onClick, white, ...restProps}) => {\r\n\r\n   return (\r\n       <button {...restProps}\r\n               className={classNames(s.button, className, {\r\n                  [s.white]: white,\r\n               })}\r\n               onClick={onClick}>{children}\r\n       </button>\r\n   )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1JzO3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_page_num\":\"Paginator_users_page_num__3fbOR\",\"totalCount\":\"Paginator_totalCount__2AlRP\",\"pageNumber\":\"Paginator_pageNumber__2ulUK\",\"selected\":\"Paginator_selected__1Iegc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__1zYnM\",\"avatar\":\"User_avatar__oW7ja\",\"description\":\"User_description__3SD3l\",\"user_name\":\"User_user_name__e9Waz\",\"status\":\"User_status__2YHG0\",\"btn\":\"User_btn__3wpTf\",\"unfollow\":\"User_unfollow__2-N_C\",\"link_to_profile\":\"User_link_to_profile__2MccP\"};","module.exports = __webpack_public_path__ + \"static/media/icons8_user.9dc38257.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_container\":\"Users_users_container__a_Mm4\",\"users_headline\":\"Users_users_headline__2Th5l\",\"users_page\":\"Users_users_page__2-csP\"};","import React, {useState} from 'react'\r\nimport classnames from 'classnames'\r\n\r\nimport s from './Paginator.module.css'\r\nimport {Button} from '../Button/Button'\r\n\r\ntype PropsType = {\r\n   currentPage: number\r\n   onPageChanged: (p: number) => void\r\n   pageSize: number\r\n   totalItemsCount: number\r\n   portionSize?: number\r\n}\r\n\r\nexport const Paginator: React.FC<PropsType> = (\r\n    {currentPage, onPageChanged, pageSize, totalItemsCount, portionSize = 10}\r\n) => {\r\n\r\n   const pageCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n   const pages = []\r\n   for (let i = 1; i <= pageCount; i++) {\r\n      pages.push(i)\r\n   }\r\n\r\n   const portionCount = Math.ceil(pageCount / portionSize)\r\n   const [portionNumber, setPortionNumber] = useState<number>(1)\r\n   const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n   const rightPortionPageNumber = portionNumber * portionSize + 1\r\n\r\n   const prevPortionNumberHandler = () => {\r\n      setPortionNumber(portionNumber - 1)\r\n   }\r\n\r\n   const nextPortionNumberHandler = () => setPortionNumber(portionNumber + 1)\r\n\r\n   return (\r\n       <div className={s.users_page_num}>\r\n          {portionNumber > 1\r\n          && <Button onClick={prevPortionNumberHandler}>PREV</Button>}\r\n          {pages\r\n              .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n              .map((p, i) => {\r\n                 return <span key={`number_items${i}`}\r\n                              className={classnames({\r\n                                 [s.selected]: currentPage === p\r\n                              }, s.pageNumber)}\r\n                              onClick={() => {\r\n                                 onPageChanged(p)\r\n                              }}>{p}</span>\r\n              })}\r\n          {portionCount > portionNumber\r\n          && <Button onClick={nextPortionNumberHandler}>NEXT</Button>}\r\n       </div>\r\n   )\r\n}","import s from './User.module.css'\r\nimport avatar from '../../../u1-assets/images/icons8_user.png'\r\nimport React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {UsersType} from '../../../u4-redux/users-reducer'\r\nimport { Button } from '../../../u2-components/Button/Button'\r\n\r\ntype UserType = {\r\n   user: UsersType\r\n   follow: (id: number) => void\r\n   unfollow: (id: number) => void\r\n   followingInProgress: Array<number>\r\n}\r\n\r\nexport const User: React.FC<UserType> = ({user, follow, unfollow, followingInProgress}) => {\r\n\r\n   return (\r\n       <div className={s.user}>\r\n          <div className={s.avatar}>\r\n             <NavLink to={'/profile/' + user.id} className={s.link_to_profile}>\r\n                <img alt={'avatar'} src={user.photos.large != null\r\n                    ? user.photos.large\r\n                    : avatar}/>\r\n             </NavLink>\r\n          </div>\r\n          <div className={s.description}>\r\n             <div className={s.user_name}>{user.name}</div>\r\n             <div className={s.status}>User status: {user.status}</div>\r\n             <div className={s.status}>User id: {user.id}</div>\r\n          </div>\r\n          {\r\n             user.followed ? <Button\r\n                     className={s.btn}\r\n                     disabled={followingInProgress.some(id => id === user.id)}\r\n                     onClick={() => {\r\n                        unfollow(user.id)\r\n                     }}>Unfollow</Button>\r\n                 : <Button\r\n                     className={s.btn}\r\n                     disabled={followingInProgress.some(id => id === user.id)}\r\n                     onClick={() => {\r\n                        follow(user.id)\r\n                     }}>Follow</Button>\r\n          }\r\n       </div>\r\n   )\r\n}\r\n\r\n\r\n\r\n","import {Form, Formik, Field} from 'formik';\r\nimport React from 'react';\r\nimport {FilterType} from '../../u4-redux/users-reducer';\r\n\r\nconst usersSearchValidateForm = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\ntype FormType = {\r\n    term: string,\r\n    friend: 'true' | 'false' | 'null'\r\n}\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        //convert string to boolean\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n        //onFilterChanged get filter and include this value in requestUsers(1, pageSize, filter)\r\n        //requestUsers do request in redux\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return <Formik\r\n        //from redux\r\n        initialValues={{term: '', friend: 'null'}}\r\n        validate={usersSearchValidateForm}\r\n        onSubmit={submit}>\r\n\r\n        {({isSubmitting}) => (\r\n            <Form>\r\n                <Field type=\"text\" name=\"term\"/>\r\n\r\n                <Field name=\"friend\" as=\"select\">\r\n                    <option value=\"null\">All</option>\r\n                    <option value=\"true\">Only following</option>\r\n                    <option value=\"false\">Only unfollowing</option>\r\n                </Field>\r\n                <button type=\"submit\" disabled={isSubmitting}>\r\n                    Find\r\n                </button>\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n})","import React from 'react'\r\nimport {FilterType, UsersType} from '../../u4-redux/users-reducer'\r\nimport {Paginator} from '../../u2-components/Paginator/Paginator'\r\nimport {User} from './User/User'\r\nimport {UsersSearchForm} from \"./UsersSearchForm\";\r\n\r\nimport s from './Users.module.css'\r\n\r\ntype UsersPageType = {\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    users: Array<UsersType>\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    onPageChanged: (p: number) => void\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nexport const Users: React.FC<UsersPageType> =\r\n    ({\r\n         pageSize,\r\n         totalUsersCount,\r\n         currentPage,\r\n         users,\r\n         onPageChanged,\r\n         isFetching,\r\n         followingInProgress,\r\n         onFilterChanged,\r\n         ...props\r\n     }) => {\r\n\r\n        return (\r\n            <div className={s.users_container}>\r\n                <div className={s.users_headline}>Users</div>\r\n                <div>\r\n                    <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n                    <Paginator currentPage={currentPage}\r\n                               onPageChanged={onPageChanged}\r\n                               pageSize={pageSize}\r\n                               totalItemsCount={totalUsersCount}\r\n                    />\r\n                    <div className={s.users_page}>\r\n                        {users.map(u => <User key={u.id}\r\n                                              user={u}\r\n                                              follow={props.follow}\r\n                                              unfollow={props.unfollow}\r\n                                              followingInProgress={followingInProgress}/>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n","import {AppStateType} from './store'\r\nimport {UsersType} from './users-reducer'\r\n\r\nexport const getUsers = (state: AppStateType): Array<UsersType> => {\r\n    return state.usersState.users\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType): number => {\r\n    return state.usersState.totalUsersCount\r\n}\r\n\r\nexport const getPageSize = (state: AppStateType): number => {\r\n    return state.usersState.pageSize\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType): number => {\r\n    return state.usersState.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType): boolean => {\r\n    return state.usersState.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType): Array<number> => {\r\n    return state.usersState.followingInProgress\r\n}\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return state.usersState.filter\r\n}\r\n\r\n\r\n","import React, {ComponentType} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {AppStateType} from '../../u4-redux/store'\r\nimport {FilterType, follow, requestUsers, unfollow, UsersType} from '../../u4-redux/users-reducer'\r\nimport {Users} from './Users'\r\nimport {Preloader} from '../../u2-components/Preloader/Preloader'\r\nimport {compose} from 'redux'\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers, getUsersFilter\r\n} from '../../u4-redux/users-selectors'\r\n\r\ntype UsersContainerType = MapStateType & MapDispatchType\r\n\r\nclass UsersContainer extends React.Component<UsersContainerType> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize, filter} = this.props\r\n        this.props.requestUsers(currentPage, pageSize, filter)\r\n    }\r\n\r\n    onPageChanged = (currentPage: number) => {\r\n        const {pageSize, filter} = this.props\r\n        this.props.requestUsers(currentPage, pageSize, filter)\r\n    }\r\n\r\n    onFilterChanged = (filter: FilterType) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(1, pageSize, filter)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    pageSize={this.props.pageSize}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    currentPage={this.props.currentPage}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    onPageChanged={this.onPageChanged}\r\n                    isFetching={this.props.isFetching}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    onFilterChanged={this.onFilterChanged}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\ntype MapStateType = {\r\n    users: Array<UsersType>\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    filter: FilterType\r\n}\r\n\r\ntype MapDispatchType = {\r\n    requestUsers: (requestPage: number, pageSize: number, filter: FilterType) => void\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\nconst mapState = (state: AppStateType): MapStateType => ({\r\n    users: getUsers(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    pageSize: getPageSize(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n    filter: getUsersFilter(state)\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n    connect<MapStateType, MapDispatchType, {}, AppStateType>(\r\n        mapState,\r\n        {requestUsers, follow, unfollow}\r\n    ),\r\n)(UsersContainer)\r\n"],"sourceRoot":""}