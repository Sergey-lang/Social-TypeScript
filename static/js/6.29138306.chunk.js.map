{"version":3,"sources":["u2-components/Button/Button.tsx","u2-components/Button/Button.module.scss","u3-pages/Users/User/User.module.css","u1-assets/images/icons8_user.png","u2-components/Paginator/Paginator.module.scss","u3-pages/Users/Users.module.scss","u3-pages/Users/UsersSearchForm/UsersSearchForm.module.scss","u3-pages/Users/UsersPageHeader/UsersPageHeader.module.scss","u3-pages/Users/User/User.tsx","u2-components/Paginator/Paginator.tsx","u4-redux/users-selectors.ts","u3-pages/Users/UsersSearchForm/UsersSearchForm.tsx","u3-pages/Users/UsersPageHeader/UsersPageHeader.tsx","u3-pages/Users/Users.tsx","u3-pages/Users/UsersContainer.tsx"],"names":["Button","className","children","onClick","white","restProps","classNames","s","button","module","exports","User","user","follow","unfollow","followingInProgress","avatar","to","id","link_to_profile","alt","src","photos","large","description","user_name","name","status","followed","btn","disabled","some","Paginator","currentPage","onPageChanged","pageSize","totalItemsCount","portionSize","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginationWrapper","pagBtn","prevBtn","filter","p","map","key","classnames","selected","numberItem","getUsers","state","usersState","users","getTotalUsersCount","totalUsersCount","getPageSize","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","getUsersFilter","usersSearchValidateForm","values","UsersSearchForm","React","memo","props","useSelector","enableReinitialize","initialValues","term","friend","String","validate","onSubmit","setSubmitting","onFilterChanged","isSubmitting","formWrapper","usersForm","type","usersSearchInput","as","usersSelector","value","searchBtn","UsersPageHeader","centralMeta","leftBlock","pageTitle","followCount","rightBlock","Users","dispatch","useDispatch","history","useHistory","useEffect","parsed","queryString","location","search","substring","actualPage","actualFilter","page","Number","requestUsers","query","pathname","usersPageWrapper","users_page","u","UsersPage","Preloader"],"mappings":"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","file":"static/js/6.29138306.chunk.js","sourcesContent":["import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport s from './Button.module.scss'\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {\r\n   white?: boolean\r\n}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({className, children, onClick, white, ...restProps}) => {\r\n\r\n   return (\r\n       <button {...restProps}\r\n               className={classNames(s.button, className, {\r\n                  [s.white]: white,\r\n               })}\r\n               onClick={onClick}>{children}\r\n       </button>\r\n   )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1JzO3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__1zYnM\",\"avatar\":\"User_avatar__oW7ja\",\"description\":\"User_description__3SD3l\",\"user_name\":\"User_user_name__e9Waz\",\"status\":\"User_status__2YHG0\",\"btn\":\"User_btn__3wpTf\",\"unfollow\":\"User_unfollow__2-N_C\",\"link_to_profile\":\"User_link_to_profile__2MccP\"};","module.exports = __webpack_public_path__ + \"static/media/icons8_user.9dc38257.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationWrapper\":\"Paginator_paginationWrapper__2uxwp\",\"numberItem\":\"Paginator_numberItem__3awlJ\",\"selected\":\"Paginator_selected__3_-TI\",\"pagBtn\":\"Paginator_pagBtn__2VdvM\",\"prevBtn\":\"Paginator_prevBtn__1l4Gy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPageWrapper\":\"Users_usersPageWrapper__3paTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"UsersSearchForm_formWrapper__PdpBG\",\"usersForm\":\"UsersSearchForm_usersForm__jwFNv\",\"usersSearchInput\":\"UsersSearchForm_usersSearchInput__2RpAV\",\"usersSelector\":\"UsersSearchForm_usersSelector__FJTOB\",\"searchBtn\":\"UsersSearchForm_searchBtn__2R5j2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"centralMeta\":\"UsersPageHeader_centralMeta__1V8fJ\",\"leftBlock\":\"UsersPageHeader_leftBlock__33dvK\",\"pageTitle\":\"UsersPageHeader_pageTitle__t3q8R\",\"followCount\":\"UsersPageHeader_followCount__mVjvp\"};","import s from './User.module.css'\r\nimport avatar from '../../../u1-assets/images/icons8_user.png'\r\nimport React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {UsersType} from '../../../u4-redux/users-reducer'\r\nimport { Button } from '../../../u2-components/Button/Button'\r\n\r\ntype UserType = {\r\n   user: UsersType\r\n   follow: (id: number) => void\r\n   unfollow: (id: number) => void\r\n   followingInProgress: Array<number>\r\n}\r\n\r\nexport const User: React.FC<UserType> = ({user, follow, unfollow, followingInProgress}) => {\r\n\r\n   return (\r\n       <div className={s.user}>\r\n          <div className={s.avatar}>\r\n             <NavLink to={'/profile/' + user.id} className={s.link_to_profile}>\r\n                <img alt={'avatar'} src={user.photos.large != null\r\n                    ? user.photos.large\r\n                    : avatar}/>\r\n             </NavLink>\r\n          </div>\r\n          <div className={s.description}>\r\n             <div className={s.user_name}>{user.name}</div>\r\n             <div className={s.status}>User status: {user.status}</div>\r\n             <div className={s.status}>User id: {user.id}</div>\r\n          </div>\r\n          {\r\n             user.followed ? <Button\r\n                     className={s.btn}\r\n                     disabled={followingInProgress.some(id => id === user.id)}\r\n                     onClick={() => {\r\n                        unfollow(user.id)\r\n                     }}>Unfollow</Button>\r\n                 : <Button\r\n                     className={s.btn}\r\n                     disabled={followingInProgress.some(id => id === user.id)}\r\n                     onClick={() => {\r\n                        follow(user.id)\r\n                     }}>Follow</Button>\r\n          }\r\n       </div>\r\n   )\r\n}\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport classnames from 'classnames'\r\n\r\nimport s from './Paginator.module.scss'\r\nimport {Button} from '../Button/Button'\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    onPageChanged: (p: number) => void\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    portionSize?: number\r\n}\r\n\r\nexport const Paginator: React.FC<PropsType> = (\r\n    {currentPage, onPageChanged, pageSize, totalItemsCount, portionSize = 10}\r\n) => {\r\n\r\n    const pageCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    const pages = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pageCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize + 1\r\n\r\n    const prevPortionNumberHandler = () => {\r\n        setPortionNumber(portionNumber - 1)\r\n    }\r\n\r\n    const nextPortionNumberHandler = () => setPortionNumber(portionNumber + 1)\r\n\r\n    return (\r\n        <div className={s.paginationWrapper}>\r\n            {portionNumber > 1\r\n            && <button onClick={prevPortionNumberHandler} className={`${s.pagBtn} ${s.prevBtn}  `}/>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p, i) => {\r\n                    return <span key={`number_items${i}`}\r\n                                 className={classnames({\r\n                                     [s.selected]: currentPage === p\r\n                                 }, s.numberItem)}\r\n                                 onClick={() => {\r\n                                     onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n            {portionCount > portionNumber\r\n            && <button onClick={nextPortionNumberHandler} className={s.pagBtn}/>}\r\n        </div>\r\n    )\r\n}","import {AppStateType} from './store'\r\nimport {UsersType} from './users-reducer'\r\n\r\nexport const getUsers = (state: AppStateType): Array<UsersType> => {\r\n    return state.usersState.users\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType): number => {\r\n    return state.usersState.totalUsersCount\r\n}\r\n\r\nexport const getPageSize = (state: AppStateType): number => {\r\n    return state.usersState.pageSize\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType): number => {\r\n    return state.usersState.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType): boolean => {\r\n    return state.usersState.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType): Array<number> => {\r\n    return state.usersState.followingInProgress\r\n}\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return state.usersState.filter\r\n}\r\n\r\n\r\n","import {Form, Formik, Field} from 'formik';\r\nimport React from 'react';\r\nimport {FilterType} from '../../../u4-redux/users-reducer';\r\nimport {useSelector} from 'react-redux';\r\nimport {getUsersFilter} from '../../../u4-redux/users-selectors';\r\n\r\nimport s from './UsersSearchForm.module.scss'\r\nimport {Button} from '../../../u2-components/Button/Button';\r\n\r\nconst usersSearchValidateForm = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\ntype FriendFormType = 'true' | 'false' | 'null';\r\n\r\ntype FormType = {\r\n    term: string,\r\n    friend: FriendFormType\r\n}\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const filter = useSelector(getUsersFilter)\r\n\r\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        //convert string to boolean\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n        //onFilterChanged get filter and include this value in requestUsers(1, pageSize, filter)\r\n        //requestUsers do request in redux\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return <Formik\r\n        //initial values === redux filter values\r\n        //useEffect work after first render and current values take later, so\r\n        //the enableReinitialize prop resets form if initialValues is changed\r\n        enableReinitialize\r\n        initialValues={{term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n        validate={usersSearchValidateForm}\r\n        onSubmit={submit}>\r\n\r\n        {({isSubmitting}) => (\r\n            <div className={s.formWrapper}>\r\n                <Form className={s.usersForm}>\r\n                    <Field type=\"text\" name=\"term\" className={s.usersSearchInput}/>\r\n                    <Field name=\"friend\" as=\"select\" className={s.usersSelector}>\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only following</option>\r\n                        <option value=\"false\">Only unfollowing</option>\r\n                    </Field>\r\n                    <Button type=\"submit\" disabled={isSubmitting} className={s.searchBtn}>\r\n                        Find\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        )}\r\n    </Formik>\r\n})","import {FilterType} from '../../../u4-redux/users-reducer';\r\nimport React from 'react';\r\nimport {UsersSearchForm} from '../UsersSearchForm/UsersSearchForm';\r\n\r\nimport s from './UsersPageHeader.module.scss';\r\n\r\ntype UsersPageHeaderProps = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nexport const UsersPageHeader: React.FC<UsersPageHeaderProps> = ({ onFilterChanged}) => {\r\n    return (\r\n        <div className={s.centralMeta}>\r\n            <div className={s.leftBlock}>\r\n                <div className={s.pageTitle}>Friends / Followers\r\n                    <span className={s.followCount}>55</span>\r\n                </div>\r\n            </div>\r\n            <div className={s.rightBlock}>\r\n                <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport {User} from './User/User'\r\nimport {UsersSearchForm} from './UsersSearchForm/UsersSearchForm';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {FilterType, requestUsers} from '../../u4-redux/users-reducer'\r\nimport {Paginator} from '../../u2-components/Paginator/Paginator'\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from '../../u4-redux/users-selectors';\r\nimport {useHistory} from 'react-router-dom';\r\nimport * as queryString from 'querystring';\r\n\r\nimport s from './Users.module.scss'\r\nimport { UsersPageHeader } from './UsersPageHeader/UsersPageHeader';\r\n\r\ntype QueryParamsType = { term?: string, page?: string, friend?: string };\r\n\r\nexport const Users: React.FC =\r\n    (props) => {\r\n\r\n        const followingInProgress = useSelector(getFollowingInProgress)\r\n        const totalUsersCount = useSelector(getTotalUsersCount)\r\n        const currentPage = useSelector(getCurrentPage)\r\n        const pageSize = useSelector(getPageSize)\r\n        const filter = useSelector(getUsersFilter)\r\n        const users = useSelector(getUsers)\r\n\r\n        const dispatch = useDispatch()\r\n        const history = useHistory()\r\n\r\n        //this effect get first url params and set it to redux\r\n        useEffect(() => {\r\n            //read url params from location and convert it to object using 'queryString'\r\n            //there is excess '?'. delete it use 'substring'\r\n            const parsed = queryString\r\n                .parse(history.location.search.substring(1)) as QueryParamsType\r\n\r\n            let actualPage = currentPage\r\n            let actualFilter = filter\r\n\r\n            //if has actual value in url we can assign it 'actualPage' and convert string pageNumber to number\r\n            //after that this value go to request\r\n            if (!!parsed.page) actualPage = Number(parsed.page)\r\n            //we can't change filter mutable\r\n            if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n\r\n            //check empty url\r\n            switch (parsed.friend) {\r\n                case 'null':\r\n                    actualFilter = {...actualFilter, friend: null}\r\n                    break\r\n                case 'true':\r\n                    actualFilter = {...actualFilter, friend: true}\r\n                    break\r\n                case 'false':\r\n                    actualFilter = {...actualFilter, friend: false}\r\n                    break\r\n            }\r\n\r\n            dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n        }, [])\r\n\r\n        // this effect get filter from redux after changing and push settings to url from search(term,friend)\r\n        // url setting has dependency = filter, currentPage\r\n        useEffect(() => {\r\n\r\n            const query: QueryParamsType = {}\r\n            //if term doesn't empty\r\n            if (!!filter.term) query.term = filter.term\r\n            //add friend if !== null - default value in API\r\n            if (filter.friend !== null) query.friend = String(filter.friend)\r\n            //add currentPage if !== 1 - default value in API\r\n            if (currentPage !== 1) query.page = String(currentPage)\r\n\r\n            history.push({\r\n                pathname: '/users',\r\n                search: queryString.stringify(query)\r\n            })\r\n        }, [filter, currentPage])\r\n\r\n        const onPageChanged = (currentPage: number) => {\r\n            dispatch(requestUsers(currentPage, pageSize, filter))\r\n        }\r\n        const onFilterChanged = (filter: FilterType) => {\r\n            dispatch(requestUsers(1, pageSize, filter))\r\n        }\r\n        const follow = (id: number) => {\r\n            dispatch(follow(id))\r\n        }\r\n        const unfollow = (id: number) => {\r\n            dispatch(unfollow(id))\r\n        }\r\n\r\n        return (\r\n            <div className={s.usersPageWrapper}>\r\n                <UsersPageHeader onFilterChanged={onFilterChanged}/>\r\n                <div>\r\n                    <Paginator currentPage={currentPage}\r\n                               onPageChanged={onPageChanged}\r\n                               pageSize={pageSize}\r\n                               totalItemsCount={totalUsersCount}\r\n                    />\r\n                    <div className={s.users_page}>\r\n                        {users.map(u => <User key={u.id}\r\n                                              user={u}\r\n                                              follow={follow}\r\n                                              unfollow={unfollow}\r\n                                              followingInProgress={followingInProgress}/>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n","import React from 'react'\r\nimport {Users} from './Users'\r\nimport {useSelector} from 'react-redux'\r\nimport {getIsFetching} from '../../u4-redux/users-selectors'\r\nimport {Preloader} from '../../u2-components/Preloader/Preloader'\r\nimport {FilterType, UsersType} from '../../u4-redux/users-reducer'\r\n\r\ntype UserPagePropsType = {\r\n    users: Array<UsersType>\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    followingInProgress: Array<number>\r\n    filter: FilterType\r\n}\r\n\r\nexport const UsersPage: React.FC<UserPagePropsType> = (props) => {\r\n\r\n    const isFetching = useSelector(getIsFetching)\r\n\r\n    return (\r\n        <>\r\n            {isFetching ? <Preloader/> : null}\r\n            <Users/>\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}